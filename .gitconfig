[alias]
  # Prettier log
	l = log --color --graph --abbrev-commit --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%C(bold blue)<%an>%Creset'

	# View the current working tree status using the short format
	s = status -s

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	# `git di $number` shows the diff between the state `$number` revisions ago and the current state
	di = !"d() { git diff --patch-with-stat HEAD~$1; }; git diff-index --quiet HEAD -- || clear; d"

	# Switch to a branch, creating it if necessary
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

	# Amend the currently staged files to the latest commit
	amend = commit --amend --reuse-message=HEAD

	# Credit an author on the latest commit
	credit = "!f() { git commit --amend --author \"$1 <$2>\" -C HEAD; }; f"

	# Interactive rebase with the given number of latest commits
	reb = "!r() { git rebase -i HEAD~$1; }; r"

	# Find branches containing commit
	fb = "!f() { git branch -a --contains $1; }; f"

	# Find tags containing commit
	ft = "!f() { git describe --always --contains $1; }; f"

	# Find untracked branches that used to be on origin
	ut = "!f() { git branch -vv | grep origin | grep ': gone' | awk '{print $1}'; }; f"

	# Fetch a MR
	fetch-mr = "!sh -c 'git fetch $1 merge-requests/$2/head:mr-$1-$2' -"

[color]
	ui = true

[commit]
	# https://help.github.com/articles/signing-commits-using-gpg/
	gpgsign = true

[core]
	editor = nano
	excludesfile = ~/.gitignore
	pager = delta

[help]
	# Automatically correct and execute mistyped commands
	autocorrect = 1

[http]
	emptyAuth = true

[pull]
	rebase = true

[push]
	default = simple

[user]
	name = Tadej Novak
	email = tadej@tano.si
	signingkey = ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAILyUZrwImvnKismyQwZ/BnhlRTbPe2JLbrvrYDvLlMZZ

[github]
  user = ntadej

[atlas]
	user = tadej

[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	process = git-lfs filter-process
	required = true

[rebase]
	autoStash = true

[delta]
	side-by-side = true

[init]
	defaultBranch = main

[gpg]
	format = ssh

[gpg "ssh"]
	allowedSignersFile = ~/.gitsigners
